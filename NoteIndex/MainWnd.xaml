<Window x:Class="Note_Index.MainWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Note_Index"
        mc:Ignorable="d"
        Title="Index" Height="676" Width="672" WindowStyle="None" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" Background="Transparent"
        Topmost="True" AllowsTransparency="True" Closing="Window_Closing"
        Loaded="Window_Loaded" PreviewKeyDown="Window_KeyDown"
        Icon="img\index.ico">
    
    <Window.Resources>

        <!--Menu Button's Style-->
        <Style x:Key="MenuBtnStyl" TargetType="{x:Type ButtonBase}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,35,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#FF666666"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Padding" Value="0,-2,0,0"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--TitleBar Button's Style-->
        <Style x:Key="TitleBarBtn" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="42"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>


        <!--All Text Box Style-->
        <Style x:Key="TxtBoxStyl" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="43"/>
            <Setter Property="Margin" Value="0,16,0,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="42"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="3,-6,0,0"/>
            <Setter Property="BorderBrush" Value="#AABBBBBB"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CaretBrush">
                <Setter.Value>
                    <LinearGradientBrush>
                        <GradientStop Color="#00000000" Offset="0.2"/>
                        <GradientStop Color="White" Offset="0.2"/>
                        <GradientStop Color="White" Offset="0.85"/>
                        <GradientStop Color="#00000000" Offset="0.85"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--All TextBlock's Style-->
        <Style x:Key="TxtStyl" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="48"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        
        <!--Menu Button's Template-->
        <ControlTemplate x:Key="MentBtnTmplt" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#33878787"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF489AD8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#596A6A6A"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF489AD8"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>

    <Border Margin="10" BorderBrush="#888888" BorderThickness="1" Background="{x:Null}">
        <Border.Effect>
            <DropShadowEffect BlurRadius="14" ShadowDepth="0" Opacity="0.55"/>
        </Border.Effect>

        <Grid x:Name="MainGrid" Background="#191919" >

            <Grid x:Name="WndTitle" Height="26" VerticalAlignment="Top"
                  Background="#f9f9f9" Width="650"
                  MouseLeftButtonDown="WndTitle_MouseLeftButtonDown">

                <TextBlock Text="Note Index" VerticalAlignment="Center" FontSize="13"
                           HorizontalAlignment="Center" FontWeight="SemiBold" 
                           Foreground="#525252" FontStyle="Italic" Margin="0,-3,0,0"/>

                <StackPanel Width="84" HorizontalAlignment="Right" Orientation="Horizontal"
                            FlowDirection="RightToLeft" Background="{x:Null}">
                    <Button x:Name="CloseBtn" Click="CloseBtn_Click"
                            Style="{StaticResource TitleBarBtn}" >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Image x:Name="image" Source="img/close1.png" Stretch="None" Focusable="False" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#18000000"/>
                                        <Setter Property="Source" TargetName="image" Value="img/close2.png"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#28000000"/>
                                        <Setter Property="Source" TargetName="image" Value="img/close2.png"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button x:Name="MinimizBtn" Click="MinimizBtn_Click"
                            Style="{StaticResource TitleBarBtn}" >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Image x:Name="image" Source="img/minimiz.png" Stretch="None" Focusable="False" HorizontalAlignment="Center" Margin="0,8,0,0" SnapsToDevicePixels="False" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#18000000"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#28000000"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </Grid>


            <WrapPanel Margin="0,28,0,0" x:Name="WndBody" Background="{x:Null}">
                <WrapPanel.Effect>
                    <BlurEffect Radius="0"/>
                </WrapPanel.Effect>
                <!--Note Dinomination TextBlock-->
                <StackPanel Margin="20,20,0,0" Orientation="Vertical" FlowDirection="RightToLeft">

                    <TextBlock Text="2000" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="500" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="200" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="100" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="50" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="20" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="10" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="Coin" Style="{StaticResource TxtStyl}"/>
                </StackPanel>

                <!--Multiply Text-->
                <StackPanel Margin="15,20,0,0" Orientation="Vertical">

                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="X" Style="{StaticResource TxtStyl}"/>
                </StackPanel>

                <!--Number of Note TextBox-->
                <StackPanel Margin="10,20,0,0" Orientation="Vertical">

                    <TextBox x:Name="tb2000" TabIndex="0" Margin="0,8,0,0" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged2000" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb500" TabIndex="1" Style="{StaticResource TxtBoxStyl}" 
                             TextChanged="TxtChanged500" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb200" TabIndex="2" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged200" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb100" TabIndex="3" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged100" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb50" TabIndex="4" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged50" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb20" TabIndex="5" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged20" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tb10" TabIndex="6" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged10" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                    <TextBox x:Name="tbCoin" TabIndex="7" Style="{StaticResource TxtBoxStyl}"
                             TextChanged="TxtChanged_Coin" PreviewKeyDown="TextBoxKeyDown"
                             PreviewTextInput="PreviewTextInputValidate"/>
                </StackPanel>

                <!--Result TextBlock-->
                <StackPanel Margin="15,20,0,0" Orientation="Vertical" Width="300">

                    <TextBlock Text="=  2000" x:Name="r_2000" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  500"  x:Name="r_500" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  200"  x:Name="r_200"  Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  100"  x:Name="r_100" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  50"   x:Name="r_50" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  20"   x:Name="r_20" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  10"   x:Name="r_10" Style="{StaticResource TxtStyl}"/>
                    <TextBlock Text="=  Coin" x:Name="r_Coin" Style="{StaticResource TxtStyl}"/>
                </StackPanel>

                <Border Height="5" Width="420" Margin="190,5,0,0" BorderBrush="White" BorderThickness="0,1,0,1"/>

                <TextBlock x:Name="Total_Sum" Text="Result =" Style="{StaticResource TxtStyl}" Margin="188,-3,0,0"/>

                <!--Buttom Menu Grid-->

                <Grid Height="72" Width="650" Background="#232323">
                    
                    <Button x:Name="ClearBtn" Content="Clear"
                        Style="{StaticResource MenuBtnStyl}" Focusable="False"
                        Template="{StaticResource MentBtnTmplt}" Click="ClearBtn_Click"/>

                    <Button x:Name="HistoryBtn" Content="Memory" TabIndex="-1" Focusable="False"
                        Style="{StaticResource MenuBtnStyl}" Click="HistoryBtn_Click"
                        Template="{StaticResource MentBtnTmplt}" Margin="0,0,200,0"/>


                    <Button x:Name="SettingBtn" HorizontalAlignment="Left" Width="40" Height="40" Focusable="False"
                        Margin="20,0,0,0" Background="Transparent" Click="SettingBtn_Click"
                        TabIndex="-1" BorderThickness="0">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="40"/>
                            </Style>
                        </Button.Resources>
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Image x:Name="image" Source="img/setting0.png" Stretch="None" Focusable="False" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" TargetName="image" Value="img/setting1.png"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Source" TargetName="image" Value="img/setting0.png"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                </Grid>
            </WrapPanel>
            
            <Grid Margin="0,27,0,0" x:Name="WndContainer" Background="{x:Null}">
                
            </Grid>
            
        </Grid>
    </Border>
</Window>
